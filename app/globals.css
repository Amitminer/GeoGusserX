@import "tailwindcss";
@layer theme, base, components, utilities;

:root {
	/* Light theme colors */
	--background: 255 255 255;
	--foreground: 15 23 42;
	--card: 255 255 255;
	--card-foreground: 15 23 42;
	--popover: 255 255 255;
	--popover-foreground: 15 23 42;
	--primary: 59 130 246;
	--primary-foreground: 255 255 255;
	--secondary: 241 245 249;
	--secondary-foreground: 15 23 42;
	--muted: 241 245 249;
	--muted-foreground: 100 116 139;
	--accent: 241 245 249;
	--accent-foreground: 15 23 42;
	--destructive: 239 68 68;
	--destructive-foreground: 255 255 255;
	--border: 226 232 240;
	--input: 226 232 240;
	--ring: 59 130 246;
	--radius: 0.5rem;
}

@media (prefers-color-scheme: dark) {
	:root {
		/* Dark theme colors */
		--background: 2 6 23;
		--foreground: 248 250 252;
		--card: 15 23 42;
		--card-foreground: 248 250 252;
		--popover: 15 23 42;
		--popover-foreground: 248 250 252;
		--primary: 59 130 246;
		--primary-foreground: 255 255 255;
		--secondary: 30 41 59;
		--secondary-foreground: 248 250 252;
		--muted: 30 41 59;
		--muted-foreground: 148 163 184;
		--accent: 30 41 59;
		--accent-foreground: 248 250 252;
		--destructive: 239 68 68;
		--destructive-foreground: 255 255 255;
		--border: 30 41 59;
		--input: 30 41 59;
		--ring: 59 130 246;
	}
}

@theme inline {
	--color-background: rgb(var(--background));
	--color-foreground: rgb(var(--foreground));
	--color-card: rgb(var(--card));
	--color-card-foreground: rgb(var(--card-foreground));
	--color-popover: rgb(var(--popover));
	--color-popover-foreground: rgb(var(--popover-foreground));
	--color-primary: rgb(var(--primary));
	--color-primary-foreground: rgb(var(--primary-foreground));
	--color-secondary: rgb(var(--secondary));
	--color-secondary-foreground: rgb(var(--secondary-foreground));
	--color-muted: rgb(var(--muted));
	--color-muted-foreground: rgb(var(--muted-foreground));
	--color-accent: rgb(var(--accent));
	--color-accent-foreground: rgb(var(--accent-foreground));
	--color-destructive: rgb(var(--destructive));
	--color-destructive-foreground: rgb(var(--destructive-foreground));
	--color-border: rgb(var(--border));
	--color-input: rgb(var(--input));
	--color-ring: rgb(var(--ring));
	--radius: var(--radius);
	--font-sans: var(--font-geist-sans);
	--font-mono: var(--font-geist-mono);
}

* {
	border-color: rgb(var(--border));
}

body {
	background: rgb(var(--background));
	color: rgb(var(--foreground));
	font-family: var(--font-sans), system-ui, sans-serif;
	font-feature-settings: "rlig" 1, "calt" 1;
}

/* Custom scrollbar */
::-webkit-scrollbar {
	width: 8px;
	height: 8px;
}

::-webkit-scrollbar-track {
	background: rgb(var(--muted));
	border-radius: 4px;
}

::-webkit-scrollbar-thumb {
	background: rgb(var(--muted-foreground));
	border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
	background: rgb(var(--foreground));
}

/* Smooth transitions */
* {
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
}

/* Focus styles */
*:focus-visible {
	outline: 2px solid rgb(var(--ring));
	outline-offset: 2px;
}

/* Selection styles */
::selection {
	background: rgb(var(--primary) / 0.2);
	color: rgb(var(--primary-foreground));
}

/* Animations */
@keyframes fadeIn {
	from {
		opacity: 0;
	}

	to {
		opacity: 1;
	}
}

@keyframes slideInFromBottom {
	from {
		transform: translateY(100%);
		opacity: 0;
	}

	to {
		transform: translateY(0);
		opacity: 1;
	}
}

@keyframes slideInFromTop {
	from {
		transform: translateY(-100%);
		opacity: 0;
	}

	to {
		transform: translateY(0);
		opacity: 1;
	}
}

@keyframes scaleIn {
	from {
		transform: scale(0.9);
		opacity: 0;
	}

	to {
		transform: scale(1);
		opacity: 1;
	}
}

/* Utility classes */
.animate-fade-in {
	animation: fadeIn 0.3s ease-out;
}

.animate-slide-in-bottom {
	animation: slideInFromBottom 0.3s ease-out;
}

.animate-slide-in-top {
	animation: slideInFromTop 0.3s ease-out;
}

.animate-scale-in {
	animation: scaleIn 0.3s ease-out;
}

/* Glass morphism effect */
.glass {
	background: rgba(255, 255, 255, 0.1);
	backdrop-filter: blur(10px);
	border: 1px solid rgba(255, 255, 255, 0.2);
}

.dark .glass {
	background: rgba(0, 0, 0, 0.1);
	border: 1px solid rgba(255, 255, 255, 0.1);
}

/* Gradient text */
.gradient-text {
	background: linear-gradient(135deg, rgb(var(--primary)), rgb(147 51 234));
	-webkit-background-clip: text;
	background-clip: text;
	-webkit-text-fill-color: transparent;
}

/* Custom button hover effects */
.btn-hover-lift {
	transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.btn-hover-lift:hover {
	transform: translateY(-2px);
	box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
}

/* Loading spinner */
.spinner {
	animation: spin 1s linear infinite;
}

@keyframes spin {
	from {
		transform: rotate(0deg);
	}

	to {
		transform: rotate(360deg);
	}
}

/* Map container styles */
.map-container {
	position: relative;
	overflow: hidden;
}

.map-container>div {
	width: 100% !important;
	height: 100% !important;
}

/* Street View container styles */
.streetview-container {
	position: relative;
	overflow: hidden;
}

.streetview-container>div {
	width: 100% !important;
	height: 100% !important;
}

/* Hide Google Maps controls we don't want */
.gm-style-cc {
	display: none !important;
}

.gm-bundled-control {
	display: none !important;
}

.gm-fullscreen-control {
	display: none !important;
}

/* Custom map styles */
.custom-map-control {
	background: white;
	border: 2px solid white;
	border-radius: 3px;
	box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
	cursor: pointer;
	margin: 10px;
	text-align: center;
}

.custom-map-control:hover {
	background: #f0f0f0;
}

/* Responsive design helpers */
@media (max-width: 768px) {
	.mobile-hidden {
		display: none !important;
	}
}

@media (min-width: 769px) {
	.desktop-hidden {
		display: none !important;
	}
}

/* Print styles */
@media print {
	.no-print {
		display: none !important;
	}
}
